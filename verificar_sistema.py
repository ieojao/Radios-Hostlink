from app import app, db, Usuario, Programacao, Configuracao, Destaque
from datetime import datetime

def verificar_sistema():
    with app.app_context():
        print("üîç VERIFICANDO SISTEMA RADIOS HOSTLINK")
        print("=" * 50)
        
        # Verificar usu√°rios
        print("\nüë• USU√ÅRIOS:")
        usuarios = Usuario.query.all()
        if usuarios:
            for usuario in usuarios:
                print(f"  ‚úÖ {usuario.nome} ({usuario.email}) - N√≠vel: {usuario.nivel}")
        else:
            print("  ‚ùå Nenhum usu√°rio encontrado")
        
        # Verificar programa√ß√µes
        print("\nüìª PROGRAMA√á√ïES:")
        programacoes = Programacao.query.all()
        if programacoes:
            print(f"  ‚úÖ Total de {len(programacoes)} programa√ß√µes cadastradas")
            dias_semana = ['DOMINGO', 'SEGUNDA', 'TER√áA', 'QUARTA', 'QUINTA', 'SEXTA', 'S√ÅBADO']
            for dia in dias_semana:
                count = Programacao.query.filter_by(dia_semana=dia).count()
                print(f"    - {dia}: {count} programas")
        else:
            print("  ‚ùå Nenhuma programa√ß√£o encontrada")
        
        # Verificar destaques
        print("\n‚≠ê DESTAQUES:")
        destaques = Destaque.query.all()
        if destaques:
            print(f"  ‚úÖ Total de {len(destaques)} destaques cadastrados")
            ativos = Destaque.query.filter_by(ativo=True).count()
            inativos = Destaque.query.filter_by(ativo=False).count()
            print(f"    - Ativos: {ativos} destaques")
            print(f"    - Inativos: {inativos} destaques")
            
            print("\nüìã Lista de destaques:")
            destaques_ordenados = Destaque.query.order_by(Destaque.ordem).all()
            for destaque in destaques_ordenados:
                status = "‚úÖ" if destaque.ativo else "‚ùå"
                print(f"    {status} {destaque.ordem}. {destaque.titulo}")
        else:
            print("  ‚ùå Nenhum destaque encontrado")
        
        # Verificar configura√ß√µes
        print("\n‚öôÔ∏è CONFIGURA√á√ïES:")
        configs = Configuracao.query.all()
        if configs:
            print(f"  ‚úÖ {len(configs)} configura√ß√µes encontradas")
            for config in configs:
                print(f"    - {config.chave}: {config.valor[:50]}{'...' if len(config.valor) > 50 else ''}")
        else:
            print("  ‚ö†Ô∏è Nenhuma configura√ß√£o personalizada encontrada (usando padr√µes)")
        
        # Verificar programa√ß√£o atual
        print("\nüéµ PROGRAMA√á√ÉO ATUAL:")
        agora = datetime.now()
        dia_semana = agora.strftime('%A').upper()
        hora_atual = agora.time()
        
        dias_map = {
            'MONDAY': 'SEGUNDA',
            'TUESDAY': 'TER√áA', 
            'WEDNESDAY': 'QUARTA',
            'THURSDAY': 'QUINTA',
            'FRIDAY': 'SEXTA',
            'SATURDAY': 'S√ÅBADO',
            'SUNDAY': 'DOMINGO'
        }
        
        dia_portugues = dias_map.get(dia_semana, dia_semana)
        programacao_atual = Programacao.query.filter_by(dia_semana=dia_portugues).filter(
            Programacao.horario_inicio <= hora_atual,
            Programacao.horario_fim >= hora_atual
        ).first()
        
        if programacao_atual:
            print(f"  ‚úÖ {programacao_atual.titulo} ({programacao_atual.horario_inicio.strftime('%H:%M')} - {programacao_atual.horario_fim.strftime('%H:%M')})")
        else:
            print(f"  ‚ö†Ô∏è Nenhuma programa√ß√£o ao vivo no momento ({dia_portugues} - {hora_atual.strftime('%H:%M')})")
        
        print("\n" + "=" * 50)
        print("üéâ SISTEMA PRONTO!")
        print("\nüìã INSTRU√á√ïES:")
        print("1. Acesse: http://127.0.0.1:5000")
        print("2. Para o admin: http://127.0.0.1:5000/admin")
        print("3. Login admin: admin@radioshostlink.com / admin123")
        print("\n‚ú® Funcionalidades ativas:")
        print("  ‚úÖ P√°gina inicial com programa√ß√£o")
        print("  ‚úÖ Dashboard administrativo")
        print("  ‚úÖ Gerenciamento de programa√ß√µes")
        print("  ‚úÖ Gerenciamento de destaques")
        print("  ‚úÖ Sistema de login")
        print("  ‚úÖ API para programa√ß√£o atual")
        print("  ‚úÖ Grade de programa√ß√£o por dia")

if __name__ == '__main__':
    verificar_sistema() 